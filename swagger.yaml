swagger: "2.0"
info:
  description: "This is an API documentation for the Protranslating API server."
  version: 1.0.0
  title: Protranslating API Documentation
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: 
  - protranslating.herokuapp.com
tags:
  - name: test
    description: Operations on testing the application
  - name: clients
    description: Operations on clients
  - name: providers
    description: Operations on providers
schemes:
  - https
paths:
  /:
    get:
      tags:
        - test
      summary: Test server connection
      description: Test the server connection
      operationId: testServer
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: Welcome to Protranslating application with nodejs, express, and mongodb.
  /api/v1:
    get:
      tags:
        - test
      summary: Test api connection
      description: Test the api connection
      operationId: testAPI
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: Welcome to the Protranslating API v1.0! 
  /api/v1/clients/test:
    get:
      tags:
        - test
      summary: Test clients API
      description: Test the client service connection
      operationId: testClient
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: Welcome to the Protranslating API v1.0! This is the client routes
  /api/v1/providers/test:
    get:
      tags:
        - test
      summary: Test providers API
      description: Test the provider service connection
      operationId: testProvider
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: Welcome to the Protranslating API v1.0! This is the provider routes
  "/api/v1/providers/add":
    post:
      tags:
        - providers
      summary: Add a provider
      description: "Adds a new provider into the application"
      operationId: addProvider
      consumes:
        - application/x-www-form-urlencoded
        - application/json
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: provider name
          required: true
          type: string
      responses:
        "200":
          description: successfully added
          schema:
            type: object
            items:
              $ref: "#/definitions/addPuccessResponse"
        "400":
          description: Bad request, missing some details.
          schema:
            type: object
            items:
              $ref: "#/definitions/BadRequestResponse"
        "409":
          description: Conflict! Duplicate provider name.
          schema:
            type: object
            items:
              $ref: "#/definitions/ConflictResponse"
  "/api/v1/clients/add":
    post:
      tags:
        - clients
      summary: Creates new client
      description: "Adds a new client into the application"
      operationId: addClient
      consumes:
        - application/x-www-form-urlencoded
        - application/json
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: name of client
          required: true
          type: string
        - name: phone
          in: formData
          description: phone number of client
          required: true
          type: integer
          format: int64
        - name: email
          in: formData
          description: email of client
          required: true
          type: string
        - name: provider
          in: formData
          description: client's provider(s)
          required: true
          type: array
          items:
            type: string
      responses:
        "201":
          description: successfully added
          schema:
            type: object
            items:
              $ref: "#/definitions/AddClientSuccessResponse"
        "400":
          description: Bad request, missing some details.
          schema:
            type: object
            items:
              $ref: "#/definitions/BadRequestResponse"
        "409":
          description: A client with this email already exists.
          schema:
            type: object
            items:
              $ref: "#/definitions/ConflictResponse"
        "422":
          description: Could not create client.
          schema:
            type: object
            items:
              $ref: "#/definitions/UnprocessableEntityResponse"
  /api/v1/clients:
    get:
      tags:
        - clients
      summary: Get all clients
      description: Get all the clients in the application
      operationId: fetchClients
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            items:
              $ref: "#/definitions/SuccessFetchUserResponse"
  /api/v1/providers:
    get:
      tags:
        - providers
      summary: Get providers
      description: Get all the providers in the application
      operationId: fetchProvider
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            items:
              $ref: "#/definitions/SuccessStockResponse"
  /api/v1/clients/{id}:
    get:
      tags:
        - clients
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the client to get
      summary: get client by id
      description: get a client by id
      operationId: getClientById
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            items:
              $ref: "#/definitions/SuccessStockResponse"
  /api/v1/providers/{id}:
    get:
      tags:
        - providers
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the provider to get
      summary: get provider by id
      description: get a provider by id
      operationId: getproviderById
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            items:
              $ref: "#/definitions/SuccessStockResponse"
  /api/v1/clients/edit/{id}:
    put:
      tags:
        - clients
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the client to get
        - name: name
          in: formData
          description: updated name of the client
          type: string
        - name: phone
          in: formData
          description: updated phone number of the client
          type: integer
          format: int64
        - name: provider
          in: formData
          description: updated client's provider(s)
          type: array
      summary: Edit client details 
      description: Edit a client's details
      operationId: editClient
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            items:
              $ref: "#/definitions/SuccessStockResponse"
  /api/v1/providers/edit/{id}:
    put:
      tags:
        - providers
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the provider to get
        - name: name
          in: formData
          description: updated name of the provider
          type: string
      summary: Edit provider details 
      description: Edit a provider's details
      operationId: editClient
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            type: object
            items:
              $ref: "#/definitions/SuccessStockResponse"

definitions:
  Clients:
    title: Clients
    example:
      id: 14
      name: mike
      email: mikebrown@email.com
      phone: 18001119988
      provider: ['provider1', 'provider2']
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
      phone:
        type: integer
      provider:
        type: array
    required:
      - id
      - name
      - email
      - phone
      - provider
    xml:
      name: Clients
  Provider:
    title: Providers
    example:
      id: 14
      name: provider1
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    required:
      - id
      - name
    xml:
      name: Providers
  AddClientSuccessResponse:
    title: AddClientSuccessResponse
    example:
      status: 201
      data:
        message: Client successful added
        client:
          id: 14
          name: fola
          email: fola@email.com
          phone: 18001119988
          provider: ['provider1', 'provider2']
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        $ref: '#/definitions/AddClientData'
    required:
    - status
    - data
  AddClientData:
    title: AddClientData
    example:
      message: Client successfully added
      client:
        id: 14
        name: fola
        email: fola@email.com
        phone: 18001119988
        provider: ['provider1', 'provider2']
    type: object
    properties:
      client:
        $ref: '#/definitions/Clients'
      message:
        type: string
    required:
    - client
    - message
  AddProviderSuccessResponse:
    title: AddProviderSuccessResponse
    example:
      status: 201
      data:
        message: Provider successfully added
        provider:
          id: 14
          name: fola
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        $ref: '#/definitions/AddProviderData'
    required:
    - status
    - data
  AddProviderData:
    title: AddProviderData
    example:
      message: Provider successfully added
      provider:
        id: 14
        name: fola
    type: object
    properties:
      provider:
        $ref: '#/definitions/Providers'
      message:
        type: string
    required:
    - provider
    - message
  FetchClientSuccessResponse:
    title: FetchClientSuccessResponse
    example:
      status: 200
      data:
        id: 14
        name: mike
        email: mikebrown@email.com
        phone: 18001119988
        provider: ['provider1', 'provider2']
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        $ref: '#/definitions/FetchClientData'
    required:
    - status
    - data
  FetchClientData:
    title: FetchClientData
    example:
      message: Clients fetched successfully
      count: 109
      clients:
        $ref: '#/definitions/Clients'
    type: object
    properties:
      message:
        type: string
      count:
        type: integer
      clients:
        type: array
        $ref: '#/definitions/Clients'
    required:
    - message
    - count
    - clients
  FetchProviderSuccessResponse:
    title: FetchProviderSuccessResponse
    example:
      status: 200
      data:
        id: 14
        name: mike
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        $ref: '#/definitions/FetchProviderData'
    required:
    - status
    - data
  FetchProviderData:
    title: FetchProviderData
    example:
      message: Providers fetched successfully
      count: 90
      providers:
        $ref: '#/definitions/Providers'
    type: object
    properties:
      message:
        type: string
      count:
        type: integer
      providers:
        type: array
        $ref: '#/definitions/Providers'
    required:
    - message
    - count
    - providers
  UpdateClientSuccessResponse:
    title: UpdateClientSuccessResponse
    example:
      status: 200
      data:
        id: 14
        name: mike
        email: mikebrown@email.com
        phone: 18001119988
        provider: ['provider1', 'provider2']
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        $ref: '#/definitions/UpdateClientData'
    required:
    - status
    - data
  UpdateClientData:
    title: UpdateClientData
    example:
      message: Clients updated successfully
      count: 109
      clients:
        $ref: '#/definitions/Clients'
    type: object
    properties:
      message:
        type: string
      count:
        type: integer
      clients:
        type: array
        $ref: '#/definitions/Clients'
    required:
    - message
    - count
    - clients
  UpdateProviderSuccessResponse:
    title: UpdateProviderSuccessResponse
    example:
      status: 200
      data:
        id: 14
        name: mike
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        $ref: '#/definitions/UpdateProviderData'
    required:
    - status
    - data
  UpdateProviderData:
    title: UpdateProviderData
    example:
      message: Providers updated successfully
      count: 90
      providers:
        $ref: '#/definitions/Providers'
    type: object
    properties:
      message:
        type: string
      count:
        type: integer
      providers:
        type: array
        $ref: '#/definitions/Providers'
    required:
    - message
    - count
    - providers
  Clients:
    title: Clients
    properties:
      clients:
        type: array
        client:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            email:
              type: string
            phone:
              type: string
            provider:
              type: array
    required:
      - clients
    xml:
      name: Clients
  BadRequestResponse:
    title: BadRequestResponse
    example:
      status: 400
      error: Bad request, missing some details.
    type: object
    properties:
      status:
        type: integer
        format: int32
      error:
        type: string
    required:
    - status
    - error
  ConflictResponse:
    title: ConflictResponse
    example:
      status: 409
      error: A client with this email already exists.
    type: object
    properties:
      status:
        type: integer
        format: int32
      error:
        type: string
    required:
    - status
    - error
  UnprocessableEntityResponse:
    title: UnprocessableEntityResponse
    example:
      status: 422
      error: Could not create client.
    type: object
    properties:
      status:
        type: integer
        format: int32
      error:
        type: string
    required:
    - status
    - error